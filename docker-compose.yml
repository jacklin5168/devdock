version: '3'

services:
    nginx:
        image: nginx:latest
        #restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/conf:/etc/nginx/conf.d
            - ./nginx/ssl:/etc/nginx/ssl
            - ${APP_CODE_PATH_HOST}:/var/www/
            - ./nginx/log:/var/log/nginx/
            - ./nginx/html:/usr/share/nginx/html/
        links:
            - php
    mysql:
        image: mysql:5.7
        #restart: always
        ports:
            - "1306:3306"
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ${MYSQL_DATA_VOLUMES}:/var/lib/mysql
            - ${APP_CODE_PATH_HOST}:/var/www
        command: --max_allowed_packet=256M --collation-server=utf8mb4_unicode_ci --character-set-server=utf8mb4
        working_dir: ${MYSQL_WORKING_DIR}
    postgres:
        image: postgres:9.2
        #restart: always
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
        volumes:
            - ${POSTGRESQL_DATA_VOLUMES}:/var/lib/postgresql/data
            - ${APP_CODE_PATH_HOST}:/var/www
            - ./postgres/conf/postgresql.conf:/etc/postgresql.conf
        command: postgres -c config_file=/etc/postgresql.conf
        working_dir: ${POSTGRESQL_WORKING_DIR}
    php:
        build: ./php
        #restart: always
        volumes:
            - ${APP_CODE_PATH_HOST}:/var/www
        environment:
            - SITE_ENVIRONMENT=dev
            - APP_ENV=dev
            - APP_DEBUG=1
        links:
            - mysql
            - redis
            - elasticsearch
            - postgres
        working_dir: ${PHP_WORKING_DIR}
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        #restart: always
        ports:
            - "8306:80"
        links:
            - mysql:db
    phppgadmin:
        image: dockage/phppgadmin:latest
        #restart: always
        ports:
            - "8432:80"
        environment:
            - PHP_PG_ADMIN_SERVER_HOST=postgres
        links:
            - postgres
    adminer:
        image: adminer
        #restart: always
        ports:
            - 8080:8080
        links:
            - mysql
            - postgres
        environment:
            - ADMINER_DEFAULT_SERVER=postgres
    composer:
        image: composer:latest
        volumes:
            - ${APP_CODE_PATH_HOST}:/var/www
        working_dir: ${COMPOSER_WORKING_DIR}
        #command: composer install
    node:
        image: node:8-stretch
        #restart: always
        ports:
            - "4200:4200"
            - "8000:8000"
            - "6001:6001"
        volumes:
            - ${APP_CODE_PATH_HOST}:/var/www
        links:
            - redis
        working_dir: ${NODE_WORKING_DIR}
        tty: true
        #command: bash -c "npm install --force && npm run prod"
    mailhog:
        image: mailhog/mailhog:latest
        #restart: always
        ports:
            - "1025:1025"
            - "8025:8025"
    redis:
        image: redis:3.0
        #restart: always
        ports:
            - "6379:6379"
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        #restart: always
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ${ELASTICSEARCH_DATA_VOLUMES}:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
            - 9300:9300
